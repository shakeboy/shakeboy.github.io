<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>&#39;考研数学&#39;</title>
    <link href="/2020/08/10/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    <url>/2020/08/10/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2020/08/10/fornt_development/"/>
    <url>/2020/08/10/fornt_development/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前端基础"><a href="#一、前端基础" class="headerlink" title="一、前端基础"></a>一、前端基础</h1><p>软件架构</p><h2 id="C-S"><a href="#C-S" class="headerlink" title="C/S"></a>C/S</h2><p>C/S架构，即Client/Server(客户端/服务器)架构，是一个典型的两层架构。通过将任务合理分配到客户端和服务器，降低了系统的通讯开销，需要安装客户端才可进行管理操作。</p><p>客户端包含一个或多个运行在用户计算机上的程序，有两个服务器，一个是数据库服务器，通过数据库连接客户端访问服务器端数据；另一种是套接字服务器，服务器通过套接字程序与客户端通信。</p><p>客户端和服务器端的程序不同，用户的程序主要在客户端，服务器端主要提供数据管理、数据共享、数据及系统维护和并发控制等，客户端程序主要完成用户的具体的业务。</p><p>开发比较容易，操作简便，但应用程序的升级和客户端程序的维护较为困难。</p><h2 id="B-S"><a href="#B-S" class="headerlink" title="B/S"></a>B/S</h2><p>B/S架构，即Brower/Server(浏览器/服务器)架构。它由逻辑上相互分离的表示层、业务层和数据层构成。表示层向客户提供数据，业务层实施业务和数据规则，数据层定义数据访问标准；三层体系结构中的核心是组件对象模型。</p><p>B / S系统统一了客户端，无需特殊安装，拥有Web浏览器即可；它将系统功能实现的核心部分集中到服务器上，简化了系统的开发、维护和使用。可以在服务器上安装数据库，然后浏览器通过mysql等数据库来进行数据交互。</p><h2 id="B-S架构和C-S架构的区别"><a href="#B-S架构和C-S架构的区别" class="headerlink" title="B/S架构和C/S架构的区别"></a>B/S架构和C/S架构的区别</h2><p><img src="E:\项目开发\学习路线\images\image-20200612065607260.png" alt="image-20200612065607260"></p><p><strong>1、建立基础不同</strong></p><p>C/S是建立在局域网的基础上的；而，B/S是建立在广域网的基础上的。</p><p><strong>2、硬件环境不同</strong></p><p>C/S 一般建立在专用的网络上，小范围里的网络环境，局域网之间再通过专门服务器提供连接和数据交换服务。</p><p>B/S 建立在广域网之上的，不必有专门的网络硬件环境，例与电话上网，租用设备，信息自己管理。有比C/S更强的适应范围, 一般只要有操作系统和浏览器就行。</p><p><strong>3、对安全要求不同</strong></p><p>C/S 一般面向相对固定的用户群，对信息安全的控制能力很强。一般高度机密的信息系统采用C/S 结构适宜，可以通过B/S发布部分可公开信息.</p><p>B/S 建立在广域网之上， 对安全的控制能力相对弱， 面向是不可知的用户群。</p><p><strong>4、对程序架构不同</strong></p><p>C/S 程序更加注重流程， 可以对权限多层次校验， 对系统运行速度可以较少考虑。</p><p>B/S对安全以及访问速度的多重考虑， 建立在需要更加优化的基础之上。 比C/S有更高的要求 B/S结构的程序架构是发展的趋势， 从MS的。Net系列的BizTalk 2000 Exchange 2000等， 全面支持网络的构件搭建的系统。 SUN 和IBM推的JavaBean 构件技术等，使 B/S更加成熟。 例如智赢IPOWER，采用AJAX和数据存储优化技术，相比一般B/S架构软件速度提高30%至99%。</p><p><strong>5、软件重用不同</strong></p><p>C/S 程序不可避免的考虑整体性， 构件的重用性不如在B/S要求下的构件的重用性好。</p><p>B/S对的多重结构，要求构件相对独立的功能， 能够相对较好的重用。</p><p><strong>6、系统维护不同</strong></p><p>C/S 程序由于整体性， 必须整体考察， 处理出现的问题以及系统升级。 升级难， 可能是再做一个全新的系统</p><p>B/S 构件组成，方面构件个别的更换，实现系统的无缝升级。 系统维护开销减到最小；用户从网上自己下载安装就可以实现升级。</p><p><strong>7、处理问题不同</strong></p><p>C/S 程序可以处理用户面固定， 并且在相同区域， 安全要求高需求， 与操作系统相关。 应该都是相同的系统</p><p>B/S 建立在广域网上， 面向不同的用户群， 分散地域， 这是C/S无法作到的；与操作系统平台关系最小。</p><p><strong>8、用户接口不同</strong></p><p>C/S 多是建立的Window平台上，表现方法有限，对程序员普遍要求较高</p><p>B/S 建立在浏览器上， 通过WEB服务或其他公共可识别描述语言可跨平台，使用更灵活。不仅可应用在Window平台上，还可应用于unix/Linux等平台。</p><p><strong>9、信息流不同</strong></p><p>C/S 程序一般是典型的中央集权的机械式处理， 交互性相对低</p><p>B/S 信息流向可变化， B-B B-C B-G等信息、流向的变化， 更象交易中心。</p><h2 id="什么是前端"><a href="#什么是前端" class="headerlink" title="什么是前端"></a>什么是前端</h2><p>前端即<a href="https://baike.baidu.com/item/%E7%BD%91%E7%AB%99%E5%89%8D%E5%8F%B0/4849916">网站前台</a>部分，运行在<a href="https://baike.baidu.com/item/PC/107">PC</a>端，<a href="https://baike.baidu.com/item/%E7%A7%BB%E5%8A%A8/8464874">移动</a>端等<a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8/213911">浏览器</a>上展现给用户浏览的网页。随着<a href="https://baike.baidu.com/item/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF/617749">互联网技术</a>的发展，<a href="https://baike.baidu.com/item/HTML5/4234903">HTML5</a>，<a href="https://baike.baidu.com/item/CSS3/4059544">CSS3</a>，前端框架的应用，<a href="https://baike.baidu.com/item/%E8%B7%A8%E5%B9%B3%E5%8F%B0/8558902">跨平台</a><a href="https://baike.baidu.com/item/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/2519669">响应式网页设计</a>能够适应各种屏幕分辨率，完美的动效设计，给用户带来极高的<a href="https://baike.baidu.com/item/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/1994">用户体验</a>。 [1]</p><p><img src="E:\项目开发\学习路线\images\image-20200612065134466.png" alt="image-20200612065134466"></p><h1 id="二、技术探讨"><a href="#二、技术探讨" class="headerlink" title="二、技术探讨"></a>二、技术探讨</h1><p>全栈</p><p>技术并不简单好学</p><p>所见即所得</p><p>三、三部分技术</p><p>W3C标准</p><p><a href="https://www.w3cschool.cn/xuexiw3c/">https://www.w3cschool.cn/xuexiw3c/</a></p><p>结构，表现，行为====Html，css,javascript</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>shakeboy</title>
    <link href="/2020/08/10/shakeboy/"/>
    <url>/2020/08/10/shakeboy/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/08/10/hello-world/"/>
    <url>/2020/08/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
